<UserControl
    x:Class="ProgressUIPrototype.ProgressUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ProgressUIPrototype"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <Grid
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                    <!--<VisualTransition From="Updating" To="Determinate">
                                    <Storyboard>
                                        <RepositionThemeAnimation TargetName="DeterminateProgressBarIndicator" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />
                                    </Storyboard>
                                </VisualTransition>-->
                    <VisualTransition From="Paused" To="Determinate">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="DeterminateProgressBarIndicator"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.25" />
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="Error" To="Determinate">
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="DeterminateProgressBarIndicator"
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                To="{TemplateBinding Foreground}"
                                Duration="0:0:0.25"/>
                            <ColorAnimation
                                Storyboard.TargetName="ProgressBarRoot"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="{TemplateBinding Background}"
                                Duration="0:0:0.25"/>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="Indeterminate" To="Determinate">
                        <Storyboard>
                            <Storyboard>
                                <FadeInThemeAnimation TargetName="IndeterminateProgressBarIndicator" />
                                <FadeInThemeAnimation TargetName="IndeterminateProgressBarIndicator2" />
                            </Storyboard>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Determinate" />
                <VisualState x:Name="Updating" />
                <!--<VisualState x:Name="Indeterminate">
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimationUsingKeyFrames
                                        Storyboard.TargetName="IndeterminateProgressBarIndicator"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames
                                        Storyboard.TargetName="IndeterminateProgressBarIndicator2"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition2}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.75" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition2}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition2}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="IndeterminateProgressBarIndicator"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0" />
                                    <DoubleAnimation Storyboard.TargetName="IndeterminateProgressBarIndicator2"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0" />
                                    <FadeOutThemeAnimation TargetName="DeterminateProgressBarIndicator" />
                                </Storyboard>
                            </VisualState>-->
                <VisualState x:Name="Error">
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="DeterminateProgressBarIndicator"
                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                            To="{ThemeResource SystemErrorTextColor}"
                            Duration="0:0:0.25"/>
                        <ColorAnimation
                            Storyboard.TargetName="ProgressBarRoot"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="{StaticResource SystemControlErrorBackgroundColor}"
                            Duration="0:0:0.25"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Paused">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames
                            Storyboard.TargetName="DeterminateProgressBarIndicator"
                            Storyboard.TargetProperty="Fill" >
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemBaseMediumLowColor}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation
                            Storyboard.TargetName="DeterminateProgressBarIndicator"
                            Storyboard.TargetProperty="Opacity"
                            To="{ThemeResource ProgressBarIndicatorPauseOpacity}"
                            Duration="0:0:0.25" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Border x:Name="ProgressBarRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
            contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}">

            <Grid>
                <Grid.Resources>
                    <local:ProgressBarWidthConverter x:Key="ProgressWidthConverter" />
                </Grid.Resources>

                <Rectangle x:Name="DeterminateProgressBarIndicator"
                    Margin="{TemplateBinding Padding}"
                    Fill="{TemplateBinding Foreground}" 
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ProgressUITemplateSettings.ProgressPosition, Mode=OneWay, Converter={StaticResource ProgressWidthConverter}, ConverterParameter={TemplateBinding Width}}"
                    HorizontalAlignment="Left"
                    contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                    contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                    contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                    contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                </Rectangle>

                <!--<Rectangle x:Name="IndeterminateProgressBarIndicator"
                        Margin="{TemplateBinding Padding}"
                        Fill="{TemplateBinding Foreground}"         
                        HorizontalAlignment="Left"
                        Opacity="0"
                        contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                        contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                        contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                        contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                    <Rectangle.RenderTransform>
                        <CompositeTransform/>
                    </Rectangle.RenderTransform>
                </Rectangle>

                <Rectangle x:Name="IndeterminateProgressBarIndicator2"
                        Margin="{TemplateBinding Padding}"
                        Fill="{TemplateBinding Foreground}"         
                        HorizontalAlignment="Left"
                        Opacity="0"
                        contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                        contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                        contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                        contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                    <Rectangle.RenderTransform>
                        <CompositeTransform/>
                    </Rectangle.RenderTransform>
                </Rectangle>-->
            </Grid>
        </Border>
    </Grid>
</UserControl>
